import math

# Initialize the board
board = [" " for _ in range(9)]


def print_board(b):
    print("\n")
    for row in [b[i:i+3] for i in range(0, 9, 3)]:
        print("| " + " | ".join(row) + " |")
    print("\n")


def is_winner(b, player):
    win_states = [
        [0, 1, 2], [3, 4, 5], [6, 7, 8],  # rows
        [0, 3, 6], [1, 4, 7], [2, 5, 8],  # columns
        [0, 4, 8], [2, 4, 6]              # diagonals
    ]
    return any(all(b[i] == player for i in state) for state in win_states)


def is_full(b):
    return " " not in b


def minimax(b, depth, alpha, beta, maximizing):
    if is_winner(b, "O"):
        return 1
    if is_winner(b, "X"):
        return -1
    if is_full(b):
        return 0

    if maximizing:  # Computer's turn (O)
        max_eval = -math.inf
        for i in range(9):
            if b[i] == " ":
                b[i] = "O"
                eval_value = minimax(b, depth + 1, alpha, beta, False)
                b[i] = " "
                max_eval = max(max_eval, eval_value)
                alpha = max(alpha, eval_value)
                if beta <= alpha:  # prune
                    break
        return max_eval

    else:  # Human's turn (X)
        min_eval = math.inf
        for i in range(9):
            if b[i] == " ":
                b[i] = "X"
                eval_value = minimax(b, depth + 1, alpha, beta, True)
                b[i] = " "
                min_eval = min(min_eval, eval_value)
                beta = min(beta, eval_value)
                if beta <= alpha:  # prune
                    break
        return min_eval


def best_move(b):
    best_val = -math.inf
    move = -1
    for i in range(9):
        if b[i] == " ":
            b[i] = "O"
            move_val = minimax(b, 0, -math.inf, math.inf, False)
            b[i] = " "
            if move_val > best_val:
                best_val = move_val
                move = i
    return move


def play_game():
    print("Tic Tac Toe - You (X) vs Computer (O)")
    print_board(board)

    while True:
        # Human turn
        move = int(input("Enter your move (1-9): ")) - 1
        if board[move] != " ":
            print("Invalid move! Try again.")
            continue
        board[move] = "X"

        print_board(board)
        if is_winner(board, "X"):
            print("ðŸŽ‰ You win!")
            break
        if is_full(board):
            print("It's a tie!")
            break

        # Computer turn
        comp_move = best_move(board)
        board[comp_move] = "O"

        print("Computer placed O in position", comp_move + 1)
        print_board(board)
        if is_winner(board, "O"):
            print("ðŸ’» Computer wins!")
            break
        if is_full(board):
            print("It's a tie!")
            break


if __name__ == "__main__":
    play_game()
